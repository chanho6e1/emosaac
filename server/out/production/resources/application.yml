spring:
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  profiles.active: local
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #    url: jdbc:mysql://localhost:3306/emosaac?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    url: jdbc:mysql://j8d203.p.ssafy.io:3306/emosaac?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: emosaac
    password: nct127b1a4produce101
    #    username: ssafy
    #    password: ssafy
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true


  # JPA
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: update
      show-sql: true
    properties:
      hibernate:
        jdbc:
          time_zone: Asia/Seoul
        dialect: org.hibernate.dialect.MySQL8Dialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true

  servlet:
    multipart:
      max-file-size: 50MB #50MB
      max-request-size: 50MB
      enabled: true

  # Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: '832788905569-ev7cftll2os6bdu5ek35qsrcpl3min99.apps.googleusercontent.com'
          clientSecret: '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'
#          redirect-uri: 'http://localhost:8081/oauth2/callback/google' #내가 테스트
          redirect-uri: 'http://j8d203.p.ssafy.io:8081/oauth2/callback/google' #로컬 프론트
#          redirect-uri: 'https://j8d203.p.ssafy.io:8081/oauth2/callback/google' #배포 프론트
          scope:
            - email
            - profile
        kakao:
          clientId: '13041c7bbff9b85dc69c4ae6023649f3'
          clientSecret: 't8gXZBCBzfddkdH6HZD0bl5ZVV7bFiN4'
          clientAuthenticationMethod: post
          authorizationGrantType: authorization_code
          redirect-uri: 'http://j8d203.p.ssafy.io:8081/oauth2/callback/kakao' #로컬 프론트
#          redirectUri: 'http://localhost:8081/oauth2/callback/kakao' #내가 테스트
#          redirect-uri: 'https://j8d203.p.ssafy.io:8081/oauth2/callback/kakao' #배포 프론트
          scope:
            - profile_nickname
            - profile_image
            - account_email
          clientName: Kakao
        naver:
          client-id: '9xgq3GBZflzSRp5DSCWu'
          client-secret: 'LiQcUfDv9n'
#          redirect-uri: 'http://localhost:8081/oauth2/callback/naver' #내가 테스트
          redirect-uri: 'http://j8d203.p.ssafy.io:8081/oauth2/callback/naver' #로컬 프론트
#          redirect-uri: 'http://j8d203.p.ssafy.io:8081/oauth2/callback/naver' #배포 프론트
          authorization-grant-type: authorization_code
          scope: name, email, profile_image
          client-name: Naver

      # Provider ??
      provider:
        kakao:
          authorizationUri: https://kauth.kakao.com/oauth/authorize
          tokenUri: https://kauth.kakao.com/oauth/token
          userInfoUri: https://kapi.kakao.com/v2/user/me
          userNameAttribute: id
        naver:
          authorization_uri: https://nid.naver.com/oauth2.0/authorize
          token_uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user_name_attribute: response


# cors ??
cors:
  allowed-origins: 'http://localhost:'
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  max-age: 3600

# jwt secret key ??
jwt:
  header: Authorization
  secret: 23kljgljewlfjldjsfklj3lkjklegjkdjkqjljslfjdkfjdkajgk3ejhkgdxaj3ljljelkdjl3hleflkajdfkljhadfasdfadsfasg4ehegfdddjkljeljldjfldjlc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
  token-validity-in-seconds: 86400
  access:
    expire-length: 864000
  refresh:
    expire-length: 864000
  token:
    secret-key: 23kljgljewlfjldjsfklj3lkjklegjkdjkqjljslfjdkfjdkajgk3ejhkgdxaj3ljljelkdjl3hleflkajdfkljhadfasdfadsfasg4ehegfdddjkljeljldjfldjlc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK


app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC23kljgljewlfjldjsfklj3lkjklegjkdjkqjljslfjdkfjdkajgk3ejhkgdxaj3ljljelkdjl3hleflkajdfkljhadfasdfadsfasg4ehegfdddjkljeljldjfldjlc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
    tokenExpirationMsec: 864000000
  oauth2:
    authorizedRedirectUris:
      - http://i8d210.p.ssafy.io:8081/oauth/token
      - https://i8d210.p.ssafy.io/oauth/token
      - http://localhost:3000/oauth/redirect
      - https://i8d210.p.ssafy.io/oauth2/redirect
      - http://localhost:3000/oauth2/redirect
      - http://i8d210.p.ssafy.io:3000/oauth2/redirect
      - https://i8d210.p.ssafy.io
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
  cors:
    allowedOrigins: http://localhost:3000, https://j8d203.p.ssafy.io:8081, http://localhost:8080, http://localhost:8081, http://j8d203.p.ssafy.io:8081

  servlet:
    multipart:
      max-file-size: 50MB #50MB
      max-request-size: 50MB
      enabled: true

cloud:
  aws:
    credentials:
      access-key: AKIAX5N4A3A634P7PZL7
      secret-key: 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
    s3:
      bucket: emosaacbucket
    region:
      static: ap-northeast-2
    stack:
      auto: false



server:
  port: 8081


